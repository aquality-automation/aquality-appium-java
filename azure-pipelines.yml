# Maven

trigger:
  - master

pool:
  vmImage: 'macOS 10.14'

variables:
  ANDROID_EMU_NAME: test
  ANDROID_EMU_ABI: x86
  ANDROID_EMU_TARGET: android-23
  ANDROID_EMU_TAG: google_apis
  XCODE_VERSION: 10.2
  IOS_PLATFORM_VERSION: 12.2
  IOS_DEVICE_NAME: iPhone X
steps:
# - task: SonarCloudPrepare@1
#   inputs:
#     SonarCloud: 'SonarCloud'
#     organization: 'aqualityautomation'
#     scannerMode: 'CLI'
#     configMode: 'file'
#     extraProperties: |
#         sonar.coverage.exclusions=**/**

- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'clean compile'

# - task: SonarCloudAnalyze@1

# - task: SonarCloudPublish@1
#   inputs:
#     pollingTimeoutSec: '300'

- task: NodeTool@0
  inputs:
    versionSpec: '11.15.0'

- script: |
    echo "Configuring Environment"
    echo $JAVA_HOME
    echo export "JAVA_HOME=\$(/Library/Java/JavaVirtualMachines/zulu-8.jdk/Contents/Home)" >> ~/.bash_profile
    export PATH=$PATH:$JAVA_HOME/bin

    echo export "ANDROID_HOME=\$ANDROID_HOME" >> ~/.bash_profile
    export PATH=$PATH:$ANDROID_HOME

    mvn -version
    echo $ANDROID_HOME
    echo $JAVA_HOME
    echo $PATH
    echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install 'system-images;$(ANDROID_EMU_TARGET);$(ANDROID_EMU_TAG);$(ANDROID_EMU_ABI)'
    echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n "$(ANDROID_EMU_NAME)" -k 'system-images;$(ANDROID_EMU_TARGET);$(ANDROID_EMU_TAG);$(ANDROID_EMU_ABI)' --force
    echo $ANDROID_HOME/emulator/emulator -list-avds
    echo "Starting emulator"
    nohup $ANDROID_HOME/emulator/emulator -avd "$(ANDROID_EMU_NAME)" -no-snapshot > /dev/null 2>&1 &
    $ANDROID_HOME/platform-tools/adb wait-for-device
    while [[ $? -ne 0 ]]; do sleep 1; $ANDROID_HOME/platform-tools/adb shell pm list packages; done;
    $ANDROID_HOME/platform-tools/adb devices
    echo "Emulator started"
    sudo xcode-select -s /Applications/Xcode_$(XCODE_VERSION).app/Contents/Developer
    xcrun simctl list
    #npm config delete prefix
    #npm config set prefix $NVM_DIR/versions/node/`node --version`
    node --version
    sudo npm install -g appium --chromedriver-skip-install
    #ln -fs /Users/runner/.nvm/versions/node/v11.15.0/lib/node_modules/appium/build/lib/main.js /usr/local/bin/appium
    chmod +x /usr/local/bin/appium
    path+=('/usr/local/bin/appium')
    export PATH
    appium --version
    java -version
    echo "Installing and Running Appium doctor"
    sudo npm install -g appium-doctor
    #ln -fs /Users/runner/.nvm/versions/node/v11.15.0/lib/node_modules/appium-doctor/appium-doctor.js /usr/local/bin/appium-doctor
    chmod +x /usr/local/bin/appium-doctor
    path+=('/usr/local/bin/appium-doctor')
    export PATH
    appium-doctor
    sudo appium --allow-insecure chromedriver_autodownload &
    echo "Appium server started"
    '/usr/local/bin/mvn' test